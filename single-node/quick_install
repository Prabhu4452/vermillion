#!/bin/bash

set -e 
YELLOW='\033[1;33m'
NC='\033[0m'
GITHUB_API_TOKEN="80cdc31286b3aabd3b7e82ac010b7e45cde0efd2"
owner="rbccps-iisc"
repo="iudx-resource-server"
name="jars.tar.gz"

directory=`dirname $0`
cd $directory

admin_passwd=`cat /dev/urandom | env LC_CTYPE=C tr -dc a-zA-Z0-9 | head -c 32; echo`
postgres_passwd=`cat /dev/urandom | env LC_CTYPE=C tr -dc a-zA-Z0-9 | head -c 32; echo`
mongo_passwd=`cat /dev/urandom | env LC_CTYPE=C tr -dc a-zA-Z0-9 | head -c 32; echo`

if [ -e ".env" ]
then
    rm .env
fi

echo "ADMIN_PWD="$admin_passwd > .env
echo "POSTGRES_PWD="$postgres_passwd >> .env
echo "QUICK_INSTALL=true" >> .env
echo "SINGLE_NODE=true" >> .env
echo "MONGO_INITDB_ROOT_USERNAME=root" >> .env
echo "MONGO_INITDB_ROOT_PASSWORD="$mongo_passwd >> .env

if [ ! -f ../iudx-api-server/target/iudx-api-server-0.0.1-SNAPSHOT-fat.jar ] 
then
    GH_API="https://api.github.com"
    GH_REPO="$GH_API/repos/$owner/$repo"
    GH_TAGS="$GH_REPO/releases/latest"
    AUTH="Authorization: token $GITHUB_API_TOKEN"
    WGET_ARGS="--content-disposition --auth-no-challenge --no-cookie"
    CURL_ARGS="-LJ#"
    
    # Validate token.
    curl -o /dev/null -sH "$AUTH" $GH_REPO || { echo "Error: Invalid repo, token or network issue!";  exit 1; }
    
    # Read asset tags.
    response=$(curl -sH "$AUTH" $GH_TAGS)
    # Get ID of the asset based on given name.
    eval $(echo "$response" | grep -C3 "name.:.\+$name" | grep -w id | tr : = | tr -cd '[[:alnum:]]=')
    [ "$id" ] || { echo "Error: Failed to get asset id, response: $response" | awk 'length($0)<100' >&2; exit 1; }
    GH_ASSET="$GH_REPO/releases/assets/$id"
    
    # Download asset file.
    echo "Downloading jar files from the latest release..." >&2
    curl $CURL_ARGS -H 'Accept: application/octet-stream' "$GH_ASSET?access_token=$GITHUB_API_TOKEN" > jars.tar.gz
    tar -zxf jars.tar.gz
    mkdir -p ../iudx-api-server/target/
    mkdir -p ../iudx-authenticator/target/
    mv jars/iudx-api-server-0.0.1-SNAPSHOT-fat.jar ../iudx-api-server/target/
    mv jars/iudx-authenticator-0.0.1-SNAPSHOT-fat.jar ../iudx-authenticator/target/
    rm -rf jars
    rm jars.tar.gz
fi

docker-compose down -v
docker-compose up -d

#echo -e "\n${YELLOW}Please wait for 1-3 mins for RabbitMQ to HiPE compile${NC}"
