#!/bin/bash

set -e 
owner="rbccps-iisc"
repo="iudx-resource-server"

# Init option {{{
Color_off='\033[0m'       # Text Reset

# Regular Colors
Black='\033[0;30m'        # Black
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
Purple='\033[0;35m'       # Purple
Cyan='\033[0;36m'         # Cyan
White='\033[0;37m'        # White

# Bold
BBlack='\033[1;30m'       # Black
BRed='\033[1;31m'         # Red
BGreen='\033[1;32m'       # Green
BYellow='\033[1;33m'      # Yellow
BBlue='\033[1;34m'        # Blue
BPurple='\033[1;35m'      # Purple
BCyan='\033[1;36m'        # Cyan
BWhite='\033[1;37m'       # White

# Underline
UBlack='\033[4;30m'       # Black
URed='\033[4;31m'         # Red
UGreen='\033[4;32m'       # Green
UYellow='\033[4;33m'      # Yellow
UBlue='\033[4;34m'        # Blue
UPurple='\033[4;35m'      # Purple
UCyan='\033[4;36m'        # Cyan
UWhite='\033[4;37m'       # White

# Background
On_Black='\033[40m'       # Black
On_Red='\033[41m'         # Red
On_Green='\033[42m'       # Green
On_Yellow='\033[43m'      # Yellow
On_Blue='\033[44m'        # Blue
On_Purple='\033[45m'      # Purple
On_Cyan='\033[46m'        # Cyan
On_White='\033[47m'       # White

# High Intensity
IBlack='\033[0;90m'       # Black
IRed='\033[0;91m'         # Red
IGreen='\033[0;92m'       # Green
IYellow='\033[0;93m'      # Yellow
IBlue='\033[0;94m'        # Blue
IPurple='\033[0;95m'      # Purple
ICyan='\033[0;96m'        # Cyan
IWhite='\033[0;97m'       # White

# Bold High Intensity
BIBlack='\033[1;90m'      # Black
BIRed='\033[1;91m'        # Red
BIGreen='\033[1;92m'      # Green
BIYellow='\033[1;93m'     # Yellow
BIBlue='\033[1;94m'       # Blue
BIPurple='\033[1;95m'     # Purple
BICyan='\033[1;96m'       # Cyan
BIWhite='\033[1;97m'      # White

# High Intensity backgrounds
On_IBlack='\033[0;100m'   # Black
On_IRed='\033[0;101m'     # Red
On_IGreen='\033[0;102m'   # Green
On_IYellow='\033[0;103m'  # Yellow
On_IBlue='\033[0;104m'    # Blue
On_IPurple='\033[0;105m'  # Purple
On_ICyan='\033[0;106m'    # Cyan
On_IWhite='\033[0;107m'   # White

need_cmd () {
    if ! hash "$1" &>/dev/null; then
        info "'$1' not found. Installing..."
	case "$1" in
	    docker )
		sudo apt -y install docker.io ;;
	    docker-compose )
		sudo curl -L \
		    "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" \
		    -o /usr/local/bin/docker-compose
		sudo chmod +x /usr/local/bin/docker-compose ;;
	    git )
		sudo apt -y install git ;;
	    python )
		sudo apt -y install python python-setuptools python-pip build-essential ;;
	esac
	success "'$1' has been installed"
    else
	success "'$1' is present"
    fi
}

check_python_deps()
{
    if ! python -c "import $1" &>/dev/null; then
        info "'$1' not found. Installing..."
	python -m pip install $1
	success "'$1' has been installed"
    else
	success "'$1' is present"
    fi
}

msg() {
    printf '%b\n' "$1" >&2
}

success() {
    msg "${Green}[✔]${Color_off} ${1}${2}"
}

info() {
    msg "${Blue}[➭]${Color_off} ${1}${2}"
}

error() {
    msg "${Red}[✘]${Color_off} ${1}${2}"
    exit 1
}

warn () {
    msg "${Yellow}[⚠]${Color_off} ${1}${2}"
}

echo_with_color () {
    printf '%b\n' "$1$2$Color_off" >&2
}

directory=`dirname $0`
cd $directory

check_dependencies()
{
    need_cmd "git"
    need_cmd "docker"
    need_cmd "docker-compose"
    need_cmd "python"
    check_python_deps "urllib3"
    check_python_deps "requests"
    check_python_deps "pika"
}

install_stack()
{

    admin_passwd=`cat /dev/urandom | env LC_CTYPE=C tr -dc a-zA-Z0-9 | head -c 32; echo`
    postgres_passwd=`cat /dev/urandom | env LC_CTYPE=C tr -dc a-zA-Z0-9 | head -c 32; echo`
    mongo_passwd=`cat /dev/urandom | env LC_CTYPE=C tr -dc a-zA-Z0-9 | head -c 32; echo`
    
    if [ -e ".env" ]
    then
        rm .env
    fi
    
    echo "ADMIN_PWD="$admin_passwd > .env
    echo "POSTGRES_PWD="$postgres_passwd >> .env
    echo "QUICK_INSTALL=true" >> .env
    echo "SINGLE_NODE=true" >> .env
    echo "MONGO_INITDB_ROOT_USERNAME=root" >> .env
    echo "MONGO_INITDB_ROOT_PASSWORD="$mongo_passwd >> .env
    
    if  [ ! -f ../iudx-api-server/target/iudx-api-server-0.0.1-SNAPSHOT-fat.jar ]	    || \
        [ ! -f ../iudx-authenticator/target/iudx-authenticator-0.0.1-SNAPSHOT-fat.jar ]
    then
        echo "Downloading jar files from the latest release..." >&2
        curl -s https://api.github.com/repos/$owner/$repo/releases/latest \
        | grep browser_download_url | cut -d '"' -f 4 | xargs curl -LJ# > jars.tar.gz
    
        tar -zxf jars.tar.gz
        mkdir -p ../iudx-api-server/target/
        mkdir -p ../iudx-authenticator/target/
        mv jars/iudx-api-server-0.0.1-SNAPSHOT-fat.jar ../iudx-api-server/target/
        mv jars/iudx-authenticator-0.0.1-SNAPSHOT-fat.jar ../iudx-authenticator/target/
        rm -rf jars
        rm jars.tar.gz
    fi
    
    docker-compose down -v
    docker-compose up -d
}

check_dependencies
install_stack
